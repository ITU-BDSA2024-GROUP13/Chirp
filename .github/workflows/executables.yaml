  name: Release

  on:
    workflow_run:
      workflows: ["Bump Version and Create Release"]  # The name of the workflow you want to depend on
      types:
        - completed  # Triggers this workflow when the specified workflow is completed
        
    push:
      tags:
        - 'v*.*.*'

    release:
      types: 
        - published  # Triggers when a release is published
        - edited     # Trigger when a release is edtied

  jobs:
    build:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Setup .NET
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: 8.x

        # Restore the dependencies
        - name: Restore dependencies
          run: dotnet restore

        # Build the solution
        - name: Build the solution
          run: dotnet build Chirp.sln --configuration Release --no-restore

        # Run tests
        - name: Run tests
          run: dotnet test --configuration Release --verbosity normal

    release:
      needs: build
      runs-on: ubuntu-latest
      strategy:
        matrix:
          os: [osx-x64, linux-x64, win-x64]

      steps:
        - name: Checkout repository
          uses: actions/checkout@v3
          with:
            fetch-depth: 0  # Fetch all history and tags

        # Get the version from Git tags to use for tagging the release
        - name: Get version from Git tags
          id: get_version
          run: |
            VERSION=$(git describe --tags --abbrev=0)
            VERSION_NO_V=$(echo $VERSION | sed 's/^v//')  # Remove the 'v' prefix
            echo "version=$VERSION" >> $GITHUB_ENV

        - name: makedir
          run: mkdir -p . 
        
        - name: make releases
          run: dotnet publish -c Release -r ${{ matrix.os }} --self-contained --output ./${{ matrix.os }}
          env:
            version: ${{ env.version }}  # This will now use the version without the 'v'
        
        - name: Zip the published files
          run: zip -r ./${{ matrix.os }} ./${{ matrix.os }}

        - name: Upload Release Artifact
          uses: actions/upload-artifact@v3
          with:
            name: ${{ matrix.os }}
            path: ./${{ matrix.os }}.zip

        - name: Download Release Artifact
          uses: actions/download-artifact@v3
          with: 
            name: ${{ matrix.os }}

        - name: Release with tag
          uses: softprops/action-gh-release@v1
          with:
            tag_name: "${{ env.version }}"
            files: |
              ./${{ matrix.os }}.zip

      
