@page "/users/{author}"
@using Chirp.Web.models
@using Chirp.Repositories
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model Chirp.Web.models.UserTimelineModel
@{
    ViewData["Title"] = "Chirp!";
    Layout = "./Shared/_Layout.cshtml";
    var routeName = HttpContext.GetRouteValue("author");
    ViewData["Location"] = $@"{routeName}";
}

@await Html.PartialAsync("_Nav")

<h2 class="name-timeline"> @routeName's Timeline </h2>


@if(SignInManager.IsSignedIn(User)){
    @if(!User.Identity.Name.Equals(routeName)){
        @if(@Model.IsFollowing(@User.Identity.Name, $"{@routeName}")){
            <button id="follow" type="submit" asp-handler="Follow" onclick=followPost()>Follow</button>
        }
        else{
            <button id="follow" type="submit" asp-handler="Follow" onclick=followPost()>Unfollow</button>
        }
    }

    @if (Model.Cheeps.Any()){
        @foreach (var cheep in Model.Cheeps)
        {
            @await Html.PartialAsync("_Cheep", new CheepPartialView {
                Author= cheep.Author,
                Body= cheep.Text,
                Date= cheep.Timestamp
            })
        }
    }else{
        <em>There are no cheeps so far.</em>
    }

}else{
    <div>
        <div class="cheep-item">

            <p class="cheep-body"> Log in to experience new ideas on Chirp. </p>
        </div>
    </div>
}

<script>
    function followPost(){
        const antiforgeryToken  = document.querySelector('input[name="__RequestVerificationToken"]').value;

        fetch(window.location.href + (window.location.href.includes("?") ? "&handler=Follow" : "?handler=Follow"), {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "RequestVerificationToken": antiforgeryToken
            },
            body: JSON.stringify({ 
                Username: '@User.Identity.Name',
                FollowName: '@routeName',
            })
        })
        .catch(error => {
            console.error("Error:", error);
        });
    }
</script>