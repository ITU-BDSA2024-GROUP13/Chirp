@page "/users/{author}/mypage"
@using Chirp.Core.Entities
@model Chirp.Web.models.MyPage
@inject SignInManager<Author> SignInManager
@inject UserManager<Author> UserManager
@using Chirp.Web.models;

@{
    ViewData["Title"] = "Chirp!";
    Layout = "./Shared/_Layout.cshtml";
    var author = @Model.AuthorDTO;
}

@await Html.PartialAsync("_Nav")
<div class="page">
    <div class="MyPage">
        <div class="ProfileNavigation">
            <div class="profilePicture">
                <img src="/assets/PB.png" id="profilePicture" />
            </div>
            <div class="navigationButtons">
                <button class="profileDetails activeButton">
                    Profile Details
                </button>

                <button class="changeDetails">
                    Change Details
                </button>

                <button class = "forgetMe">
                    Forget Me
                </button>

                <button class = "help">
                    Help
                </button>
            </div>
        </div>

        <div class="Knowledge" id="content">
            Email:
            <div class="email">@author.Email </div>

            Username:
            <div class="username"> @author.Name </div>

            Telephone:
            <div class="telephone"> *Function not added yet</div>



            <div class="followCount">
                <div> @Model.Following </div>
                <div> @Model.Followed </div>
            </div>

            <div class="distinction">
                <a href="/users/@User!.Identity!.Name/mypage/followers">Following</a>
                <a href="/users/@User!.Identity!.Name/mypage/followedby">Followers</a> </strong>
            </div>

        </div>
    </div>
</div>

<h3>All your personal tweets</h3>
@if (SignInManager.IsSignedIn(User))
{
    @if (Model.MyCheeps.Count > 0)
    {
        @foreach (var cheep in Model.MyCheeps)
        {
            @await Html.PartialAsync("_Cheep", new CheepPartialView
{
    Id = cheep.Id,
    Author = cheep.Author,
    Body = cheep.Text,
    Image = cheep.Image,
    Date = cheep.Timestamp,
    Likes = cheep.Likes,
    Dislikes = cheep.Dislikes,
    IsLiked = await @Model.HasLiked(User!.Identity!.Name!, cheep.Id),
    IsDisliked = await @Model.HasDisliked(User!.Identity!.Name!, cheep.Id)
})
        }
    }
    else
    {
        <em>You have no cheeps so far.</em>
    }
}
else
{
    <div>
    <div class="cheep-item">
        <p class="cheep-body"> Log in to experience new ideas on Chirp. </p>
    </div>
</div>
}


<script>

    const profileDetailsButtons = document.getElementsByClassName('profileDetails');
    const changeDetailsButtons = document.getElementsByClassName('changeDetails');
    const content = document.getElementById('content');

    const defaultHTML = content.innerHTML;
document.addEventListener('DOMContentLoaded', () => {
    const buttons = document.querySelectorAll('button');
    const content = document.getElementById('content');

    buttons.forEach(button => {
        button.addEventListener('click', function() {

            buttons.forEach(btn => btn.classList.remove('activeButton'));

           
            this.classList.add('activeButton');

            
            if (this.classList.contains('profileDetails')) {
                content.innerHTML = defaultHTML;
            } else if (this.classList.contains('changeDetails')) {
                content.innerHTML = `<h3> This page is currently under construction </h3>`;
            } else if (this.classList.contains('forgetMe')) {
                content.innerHTML = `<h3> This page is currently under construction </h3>`;
            } else if (this.classList.contains('Help')){
                content.innerHTML = `<h3> This page is currently under construction </h3>`;
            }
        });
    });
});
</script>

<!--<h2>Your private information</h2>













<div class="mypage-outer">
    <div class="mypage-Identifiers">
            <div>Name</div>
            <div>Email</div>   
            <strong class="cheep-author"> <a href="/users/@User!.Identity!.Name/mypage/followers">Following</a></strong>
            <br>
            <strong class="cheep-author"> <a href="/users/@User!.Identity!.Name/mypage/followedby">Followers</a> </strong>
        </div>

    <div class="mypage-variables">
        <div>@author.Name</div>
        <div>@author.Email</div>
        <div>@Model.Following</div>
        <div>@Model.Followed</div>
    </div>
</div>

<button id="forgetme" data-author="@Model.AuthorDTO.Name">Forget me</button>

<div class="confirmForgetMe" id="confirmForgetMe">
    <p>Are you sure?</p>
    <div class="confirmButtons">
        <button id="forgetMeNo">No</button>
        <button id="forgetMeYes">Yes</button>
    </div>
</div>

<h3>All your personal tweets</h3>
@if (SignInManager.IsSignedIn(User))
{
    @if (Model.MyCheeps.Count > 0)
    {
        @foreach (var cheep in Model.MyCheeps)
        {
            @await Html.PartialAsync("_Cheep", new CheepPartialView
       {
           Id = cheep.Id,
           Author = cheep.Author,
           Body = cheep.Text,
           Image = cheep.Image,
           Date = cheep.Timestamp,
           Likes = cheep.Likes,
           Dislikes = cheep.Dislikes,
           IsLiked = await @Model.HasLiked(User!.Identity!.Name!, cheep.Id),
           IsDisliked = await @Model.HasDisliked(User!.Identity!.Name!, cheep.Id)
       })
        } 
    }
    else
    {
                                                                                                                                                                                                                                        <em>You have no cheeps so far.</em>
    }
}
else
{
                                <div>
                                                    <div class="cheep-item">
                                                        <p class="cheep-body"> Log in to experience new ideas on Chirp. </p>
                                             </div>
                                   </div>
}

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const forgetme = document.getElementById("forgetme")
        const confirmationNo = document.getElementById("forgetMeNo")
        const confirmationYes = document.getElementById("forgetMeYes")

        confirmationYes.addEventListener("click", () => forgetMe(forgetMe))
        confirmationNo.addEventListener("click", () => toggleVisibilityById("confirmForgetMe"))
        forgetme.addEventListener("click", () => toggleVisibilityById("confirmForgetMe"))
    })

    function forgetMe(forgetMe){
        const dataAuthor = forgetme.getAttribute("data-author")
        const antiforgeryToken  = document.querySelector('input[name="__RequestVerificationToken"]').value;

        fetch(window.location.href + (window.location.href.includes("?") ? "&handler=forgetme" : "?handler=forgetme"), {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "RequestVerificationToken": antiforgeryToken
            },
            body: JSON.stringify({ 
                userName: dataAuthor
            })
        })
        .then(response => response.json())
        .then(data => {
            console.log(data)
            window.location = location.origin
        })
        .catch(error => {
            console.error("Error:", error);
        });
    }
</script>
--!>