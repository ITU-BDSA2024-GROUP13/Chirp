@page "/users/{author}/mypage"
@using Chirp.Core.Entities
@model Chirp.Web.models.MyPage
@inject SignInManager<Author> SignInManager
@inject UserManager<Author> UserManager
@using Chirp.Web.models;

@{
    ViewData["Title"] = "Chirp!";
    Layout = "./Shared/_Layout.cshtml";
}

@await Html.PartialAsync("_Nav")

<h2>Your private information</h2>

<div class="mypage-outer">
    <div class="mypage-Identifiers">
            <div>Name</div>
            <div>Email</div>        
        </div>

    <div class="mypage-variables">
        <div>@Model.AuthorDTO.Name</div>
        <div>@Model.AuthorDTO.Email</div>
    </div>
</div>

<button id="forgetme" asp-page-handler="ForgetMe">Forget me</button>

<h3>All your personal tweets</h3>
@if(SignInManager.IsSignedIn(User))
{
    @if (Model.MyCheeps.Count > 0)
    {
        @foreach (var cheep in Model.MyCheeps)
        {
            @await Html.PartialAsync("_Cheep", new CheepPartialView {
                Author= cheep.Author,
                Body= cheep.Text,
                Date= cheep.Timestamp
            })
        } 
    } else
    {
        <em>You have no cheeps so far.</em>
    }
} else
{
    <div>
        <div class="cheep-item">

            <p class="cheep-body"> Log in to experience new ideas on Chirp. </p>
        </div>
    </div>
}

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const forgetme = document.getElementById("forgetme")

        forgetme.addEventListener("click", () => {
            const antiforgeryToken  = document.querySelector('input[name="__RequestVerificationToken"]').value;

            fetch(window.location.href + (window.location.href.includes("?") ? "&handler=forgetme" : "?handler=forgetme"), {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "RequestVerificationToken": antiforgeryToken
                },
                body: JSON.stringify({ })
            })
            .then(response => response.json())
            .then(data => {
                console.log(data)
            })
            .catch(error => {
                console.error("Error:", error);
            });
        })
    })
</script>